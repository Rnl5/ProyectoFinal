@page "/detallesProducto/{ProductoId}"

@inject IServicioProducto ServicioProducto
@inject ISessionStorageService SessionStorageService
@inject IServicioCarrito ServicioCarrito
@inject HttpClient httpClient
@inject NotificationService notificationService


<RadzenNotification />
@if(producto != null)
{
    <div class="container text-center">
        <div class="card">
            <div class="media">
                <div class="img-container">
                    @if (producto.Foto != null)
                    {
                        var base64 = Convert.ToBase64String(producto.Foto);
                        var imgSrc = $"data:image/jpeg;base64,{base64}";

                        <img src="@imgSrc" alt="Imagen del producto" class="item-imagen" width="300" />

                    }
                </div>

                <div class="media-body">
                    <h2 class="mb-0">@(producto != null ? producto.Nombre : "Producto no encontrado")</h2>
                    <p>@producto.Descripcion</p>
                    @if (producto.PrecioOriginal > producto.Precio)
                    {
                        <h6 class="text-muted original-price">RD$ @producto.PrecioOriginal</h6>
                    }

                    <h4 class="price">
                        RD$ @producto.Precio
                    </h4>

                    <a href="carritoCompras"><button @onclick="() => AgregarCarrito()" class="btn btn-outline-primary"><i class="bi bi-cart"></i> Agregar al carrito</button> </a>
                </div>
            </div>
        </div>
    </div>
}



@code 
{
    public Productos producto { get; set; }

    [Parameter]
    public string ProductoId { get; set; }



    public NotificationMessage Mensaje { get; set; } = new NotificationMessage();

    protected override async Task OnInitializedAsync()
    {
        if(ServicioProducto.productos == null || ServicioProducto.productos.Count == 0)
        {
            await ServicioProducto.CargarProductos($"api/Productos");
        }

        producto = ServicioProducto.productos.FirstOrDefault(p => p.ProductoId == Int32.Parse(ProductoId));


    }

    public async Task AgregarCarrito()
    {
        if(producto != null)
        {
            await ServicioCarrito.AgregarAlCarrito(producto);
        }
    }
}
